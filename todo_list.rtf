{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red85\green142\blue40;\red217\green11\blue0;\red160\green114\blue253;
}
{\*\expandedcolortbl;;\csgenericrgb\c33333\c55686\c15686;\csgenericrgb\c85098\c4314\c0;\csgenericrgb\c62745\c44706\c99216;
}
\margl1440\margr1440\vieww15500\viewh14500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf2 1) Creating a new user works and signing in with the correct email/password combo works as well\cf3 \
\
2) We should save the user\'92s workout preferences in Firebase. We can base this off of userId, a property that you can get by referencing something in Firebase\
	\cf4 - Should have a simple form asking what kind of workout they are looking for only when they\
	   first sign up (Emily will add this to the sign up page) \cf3 \
\
3) Need to figure out how to add the user and their workout plan into the database which is probably done with getting the Firebase reference, getting the child, and setting the value. Bellardo has done this in lecture demos.\
\
4) If the user updates their workout plan the changes should be reflected in Firebase\
\
5) The workout plan that will be displayed is based off of the user\'92s chosen plan\
\
6) There\'92s a User Class that Emily created for now. It holds the user info but she set the workout plan to be a string because she didn\'92t know how to structure it\
\
\cf2 7) Fix signup/login stuff. I need to:\
	a) Add a nav bar item to signup so I can go back to login from signup if I don\'92t want to\
	     sign up\
	b) Remove Navigation controller going into signup because this creates weirdness after signup\
	     where you can go back out even though you shouldn\'92t be able to\cf3 \
\
\cf4 8) Make sure people can\'92t just signup again after they already have a user account; we should either redirect them back to the login page or go with the easier solution that just pops up an alert telling them they already have an account and that they should go back to the login page\
^^ I will do this - Emily \
\cf3 \
9) Create a damn name for the App\
\
\
What we just talked about: \
\
	1. Organize the database based off of userID (which can be from the firebase reference) so it looks like this \
	 \'93324\'94 :  \{\
			\'93email\'94 : \'93 \'93,\
			\'93firstName\'94 :  \'93 \'93,\
			\'93lastName\'94 :  \'93 \'93,\
			\'93workoutPlan\'94 :  \'93 \'93\
		\},\
\
	 \'93123\'94 :  \{\
			\'93email\'94 : \'93 \'93,\
			\'93firstName\'94 :  \'93 \'93,\
			\'93lastName\'94 :  \'93 \'93,\
			\'93workoutPlan\'94 :  \'93 \'93\
		\}\
\
		\'97 using this it would be easy to update/retreive user data, then update the User model in the project accordingly \
\
\
	2. Add the observers for the firebase references in case the user wants to update their information \
	\'97 he did this in a demo in class \
\
\
	\
\
\
\cf4 TODO for Emily:\
	- add touch ID sign in ability \
	- fix #8 up there \
\cf3 \
}